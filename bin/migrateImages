#!/usr/bin/env node

/**
 * Ektron news sources hosts its own images.
 * Ektron servers are going away. This will:
 * 
 * - find image links
 * - download the image file
 * - upload the image file it to the webhook bucket
 * - stash urls in firebase/eduSyncEktronNewsImages
 * 	 [{
 * 	 	id: ektronid,
 * 	 	type: 'thumbnail_image' | 'featured_image'
 * 	 	ektron: 'url.jpg',
 * 	 	wh: 'url.jpg'
 * 	 }]
 */


var through = require('through2');
var request = require('request');
var sizeOf = require('image-size');

var Env = require('../env.js')();

var News = require('../sources/news/index.js')();

console.log(process.env.FB_SITENAME);
console.log(process.env.FB_SECRET);

News.listSource()
	.pipe(News.feedImageUrls())
	.pipe(Meter())
	// .pipe(IncludeDimensions())
	.pipe(UploadImage());

function loggify () {
    return through.obj(write);

    function write (row, enc, next) {
        console.log(row);
        this.push(row);
        next();
    }
}

function Meter () {
	var count = 0;
	return through.obj(function (row, enc, next) {
		count += 1;
		if (count ===1) {
			this.push(row);
		}
		next();
	});
}

function IncludeDimensions () {
	return through.obj(dimensions);

	function dimensions (row, enc, next) {
		var chunks = [];
		console.log(row);
		var stream = this;

		var r = request.get(row.ektron);
		r.on('data', function download (chunk) {
			chunks.push(chunk);
		});
		r.on('end', function write () {
			var buffer = Buffer.concat(chunks);
			row.dimensions = sizeOf(buffer);
			row.url = buffer;
			stream.push(row);
			next();
		});
	}
}

function UploadImage () {
	return through.obj(upload);

	function upload (row, enc, next) {
		console.log(row.ektron);
		var stream = this;
		request.post(
			'http://server.webhook.com/upload-url/',
			{
				form: {
					url: row.ektron,
					resize_url: true,
					token: process.env.FB_SECRET,
					site: process.env.FB_SITENAME
				}
			},
			function (err, httpResponse, body) {
				console.log(err);
				// console.log(httpResponse);
				console.log(body);

				stream.push(body);
			});

		next();
		
	}
}